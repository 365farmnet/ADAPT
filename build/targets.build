<?xml version="1.0"?>

<project name="targetsbuild" basedir=".">
  <include buildfile=".\properties.build" failonerror="true"/>

  <target name="MSBuildDirectory">
    <echo message="entering foreach"/>
    <foreach item="File" property="solutionFile" verbose="true">
      <in>
        <items basedir="${solutionDir}">
          <include name=".\**\*.sln" />
        </items>
      </in>
      <do>
        <exec program="${msbuild.path}">
          <arg line="${solutionFile}" />
          <arg value="/property:Configuration=${configuration};Platform=${platform}"/>
          <arg value="/t:Rebuild"/>
        </exec>
      </do>
    </foreach>
  </target>

  <version buildtype="Increment" revisiontype="Automatic" path=".\${versionFile}" failonerror="false"/>

  <target name="BeforeBuild">
    <property name="solution" value="" />
    <foreach item="File" property="pluginSolution" verbose="true">
      <in>
        <items basedir=".">
          <include name=".\..\Plugins\**\*.sln" />
        </items>
      </in>
      <do>
        <property name="packagesDirectory" value="${directory::get-parent-directory(pluginSolution)}\packages" />
        <echo message="${packagesDirectory}" />
        <mkdir dir="${packagesDirectory}" unless="${directory::exists(packagesDirectory)}" />

        <echo message="updating nuget packages : ${pluginSolution}" />
        <exec program="NuGet.exe" >
          <arg line="update ${pluginSolution} -Verbosity detailed" />
        </exec>
      </do>
    </foreach>
  </target>
  
  <target name="build" depends="BeforeBuild">
    <exec program="${msbuild.path}">
      <arg line='"${solutionDir}\${solutionName}"' />
      <arg value="/property:Configuration=${configuration};Platform=${platform}"/>
      <arg value="/t:Rebuild"/>
    </exec>
  </target>

  <target name="getnugetversion">
    <property name="version" value="${buildnumber}-prerelease" />
    <if test="${property::exists('isRelease')}">
      <if test="${isRelease}">
        <property name="version" value="${buildnumber}" />
      </if>
    </if>
  </target>
  
  <target name="adaptpack" >
    <call target="getnugetversion" />
    <exec program="nuget" workingdir="${solutionDir}">
      <arg line="pack ${nuspecfile}" />
      <arg line="-Version ${version}" />
    </exec>
  </target>

  <target name="adapt" depends="adaptpack">
    <call target="getnugetversion" />
    <property name="packagename" value="${nupkgName}.${version}.nupkg" />
    <exec program="nuget" workingdir="${solutionDir}">
      <arg line="push ${packagename}" />
      <arg line="-ApiKey ${nugetapikey}" />
      <arg line="-Source ${nugetserverpath}" />
    </exec>
  </target>

  <target name="settestfileslist">
    <property name="nunittest.filelist" value="" />
    <foreach item="File" property="testfile" verbose="true">
      <echo message="set test files list with ${solutionDir}"/>
      <in>
        <items basedir=".">
          <include name="${solutionDir}\**\${test.wildcard}" />
          <exclude name="${solutionDir}\**\obj\**\*.dll"/>
        </items>
      </in>
      <do>
        <property name="nunittest.filelist" value='${nunittest.filelist} ${testfile}'/>
        <echo message='${nunittest.filelist}'/>
      </do>
    </foreach>
  </target>

  <target name="nunitTest" description="Execute nunit tests">
    <call target="settestfileslist" />
    <exec program="${nunit.exe}" commandline="${nunittest.filelist} /framework=4.0" failonerror="true" />
  </target>

  <target name="unitTests" description="Execute Unit tests using MSTest" basedir="." depends="MSBuildDirectory">
    <property name="test.wildcard" value="*Test.dll" />
    <call target="nunitTest" />
  </target>

  <target name="acceptancetest" description="Execute Acceptance tests using MSTest" basedir="." depends="MSBuildDirectory">
    <property name="test.wildcard" value="*AcceptanceTests.dll" />
    <call target="nunitTest" />
  </target>
</project>